"kableExtra", "inspectdf", "plotly", "visdat", "here",
"janitor", "flexdashboard", "patchwork")
# Importing and loading Hospital Aggregates Dataset in a directory
Hospital_Aggregates_raw <- read_csv("Data/HU_HA.csv")
data_hg <- Hospital_Aggregates_raw %>%
select(Year, Country, Variable, Measure, Value) %>%
filter(Variable %in% c("Inpatient care average length of stay (all hospitals)",
"Curative care average length of stay")) %>%
clean_names() %>%
filter(!(year %in% c(2021:2022)) & !(country %in% c("Brazil",
"Bulgaria",
"China (People's Republic of)",
"Croatia",
"Romania",
"Russia",
"South Africa"))) %>%# exclude all non-oecd countries
drop_na() %>%
arrange(year)
View(data_hg)
mean_year <- data_hg %>%
filter(!(country %in% c("Canada",
"Chile",
"Colombia",
"Denmark",
"Greece",
"Mexico",
"Netherlands",
"Slovak Republic"))) %>%
group_by(year, variable, measure) %>%
summarize(mean_value = mean(value)) %>%
mutate(mean_value = round(mean_value, 1)) %>%
ungroup()
View(mean_year)
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value) %>%
#id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
View(wide_data)
gap_years <- seq(from = 2010, to = 2020, by = 1)
clean_data <- wide_data %>%
select(year, country,
inpatient_care_alos = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)) & !(country %in% c("Brazil",
"Bulgaria",
"China (People's Republic of)",
"Croatia",
"Romania",
"Russia",
"South Africa"))) %>% # exclude year: 2021-2022 a& all non-oecd countries
drop_na() %>% # Drop all rows with NA values
arrange(country) # Arrange by ascending order by default
pacman:: p_load(
"rmarkdown", "tinytex", "tidyverse", "knitr",
"prettydoc", "rmdformats", "kableExtra",
"plotly", "visdat", "here", "finalfit",
"janitor", "patchwork")
# Importing and loading Hospital Aggregates Dataset in a directory
Hospital_Aggregates_raw <- read_csv(here("Data/HU_HA.csv"))
Hospital_Aggregates_raw
data_hg <- Hospital_Aggregates_raw %>%
select(Year, Country, Variable, Measure, Value) %>%
filter(Variable %in% c("Inpatient care average length of stay (all hospitals)",
"Curative care average length of stay")) %>%
clean_names() %>%
filter(!(year %in% c(2021:2022)) & !(country %in% c("Brazil",
"Bulgaria",
"China (People's Republic of)",
"Croatia",
"Romania",
"Russia",
"South Africa"))) %>% # exclude all non-oecd countries
drop_na() %>% #drop all rows with NA values
arrange(year)
data_hg %>%
distinct(measure) # check for distinct observation
data_hg %>%
tabyl(country) %>% # Tabulate the data by country and counts no. of values
filter(n < 22) # 22 values for each year and remove countries less than 22
mean_year <- data_hg %>%
filter(!(country %in% c("Canada",
"Chile",
"Colombia",
"Denmark",
"Greece",
"Mexico",
"Netherlands",
"Slovak Republic"))) %>%
group_by(year, variable, measure) %>%
summarize(mean_value = mean(value)) %>%
mutate(mean_value = round(mean_value, 1)) %>%
ungroup()
gap_years <- seq(from = 2010, to = 2020, by = 1) # gap of 1 year from 2010-2020
mean_year %>%
ggplot(mean_year, mapping = aes(x = year, y = mean_value, color = variable)) +
geom_line(linewidth = 1) + geom_point(color = "black") +
scale_x_continuous(breaks = gap_years) +
geom_text(aes(label = mean_value, vjust = -0.3)) +
theme(legend.title = element_blank()) +
labs(title = "AVERAGE LENGTH OF STAY",
subtitle = "Curative care ALOS vs Impatient care ALOS in the Last Decade",
x = "Year", y = "Average Days",
caption = "source: https://stats.oecd.org
Accessed Sunday 7th November, 2023")
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value) %>%
#id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value) %>%
#id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value) %>%
#id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value) %>%
#id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
View(wide_data)
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country)) %>%
clean_names() # clean names to lower and snake case for easy manipulation
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country))%>%
clean_names() # clean names to lower and snake case for easy manipulation
View(wide_data)
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country)) %>%
clean_names() # clean names to lower and snake case for easy manipulation
View(wide_data)
View(Hospital_Aggregates_raw)
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country, COU)) %>%
clean_names() # clean names to lower and snake case for easy manipulation
View(wide_data)
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country)) %>%
clean_names() # clean names to lower and snake case for easy manipulation
clean_data <- wide_data %>%
select(year, country,
inpatient_care_alos = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)) & !(country %in% c("Brazil",
"Bulgaria",
"China (People's Republic of)",
"Croatia",
"Romania",
"Russia",
"South Africa"))) %>% # exclude year: 2021-2022 a& all non-oecd countries
drop_na() %>% # Drop all rows with NA values
arrange(country) # Arrange by ascending order by default
ggplot(wide_data, mapping = aes(x = inpatient_care_average_length_of_stay_all_hospitals_days,
y = curative_care_average_length_of_stay_days, color = country)) +
geom_point() + geom_smooth(method = "glm", se = F) +
scale_y_log10() + scale_x_log10() +
labs(title = "Trends in Subjected Countries",
subtitle = "Trends btw Inpatient ALOS vs Curative ALOS (2010-2020)",
x = "Curative ALOS", y = "Inpatient ALOS")
ggplotly(ggplot(wide_data, mapping = aes(x = inpatient_care_average_length_of_stay_all_hospitals_days,
y = curative_care_average_length_of_stay_days, color = country)) +
geom_point() + geom_smooth(method = "glm", se = F) +
scale_y_log10() + scale_x_log10() +
labs(title = "Trends in Subjected Countries",
subtitle = "Trends btw Inpatient ALOS vs Curative ALOS (2010-2020)",
x = "Curative ALOS", y = "Inpatient ALOS"))
ggplotly(ggplot(wide_data, mapping = aes(x = inpatient_care_average_length_of_stay_all_hospitals_days,
y = curative_care_average_length_of_stay_days)) +
geom_point(aes(color = country)) + geom_smooth(method = "glm", se = F) +
scale_y_log10() + scale_x_log10() +
labs(title = "Trends in Subjected Countries",
subtitle = "Trends btw Inpatient ALOS vs Curative ALOS (2010-2020)",
x = "Curative ALOS", y = "Inpatient ALOS"))
View(wide_data)
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)))
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)))
allclean_data %>%
tabyl(year, country)
allclean_data %>%
tabyl(country, year)
allclean_data %>%
tabyl(country, year) %>%
View()
View(allclean_data)
allclean_data %>%
tabyl(country, year) %>%
View()
View(allclean_data)
wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)))
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)))
allclean_data %>%
tabyl(country, year)
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022))) %>%
drop_na()
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)))
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022))) %>%
drop_na()
allclean_data %>%
tabyl(country, year) %>%
View()
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)))
ggplotly(ggplot(wide_data, mapping = aes(x = inpatient_care_alos_days,
y = curative_care_alos_days)) +
geom_point(aes(color = country)) + geom_smooth(method = "glm", se = F) +
scale_y_log10() + scale_x_log10() +
labs(title = "Trends in Subjected Countries",
subtitle = "Trends btw Inpatient ALOS vs Curative ALOS (2010-2020)",
x = "Curative ALOS", y = "Inpatient ALOS"))
View(allclean_data)
ggplotly(ggplot(allclean_data, mapping = aes(x = inpatient_care_alos_days,
y = curative_care_alos_days)) +
geom_point(aes(color = country)) + geom_smooth(method = "glm", se = F) +
scale_y_log10() + scale_x_log10() +
labs(title = "Trends in Subjected Countries",
subtitle = "Trends btw Inpatient ALOS vs Curative ALOS (2010-2020)",
x = "Curative ALOS", y = "Inpatient ALOS"))
allclean_data %>%
summary_factorlist(dependent = "inpatient_care_alos_days",
explanatory = "curative_care_alos_days",
p = TRUE,
column = TRUE) %>%
kable()
allclean_data %>%
summary_factorlist(dependent = "inpatient_care_alos_days",
explanatory = "curative_care_alos_days",
p = TRUE,
column = TRUE)
ggplotly(ggplot(allclean_data, mapping = aes(x = inpatient_care_alos_days,
y = curative_care_alos_days)) +
geom_point(aes(color = country)) + geom_smooth(method = "glm", se = F) +
scale_y_log10() + scale_x_log10() +
labs(title = "Impatient Care ALOS vs Curative Care ALOS",
subtitle = "Trend Between the Curative Care ALOS and Inpatient Care ALOS in the last decade",
x = "Curative Care ALOS_Days", y = "Inpatient Care ALOS_Days",
caption = "Source: https://stats.oecd.org
accessed Sunday 7th November, 2023"))
ggplotly(ggplot(oecd_countries, mapping = aes(x = curative_care_alos,
y = inpatient_care_alos)) +
geom_point(aes(color = country)) + scale_x_log10() + scale_y_log10() +
geom_smooth(method = "glm", se = FALSE) +
labs(title = "Impatient Care ALOS vs Curative Care ALOS",
subtitle = "Trend Between the Curative Care ALOS and Inpatient Care ALOS in the last decade",
x = "Curative Care ALOS", y = "Inpatient Care ALOS",
caption = "Source: https://stats.oecd.org"))
mean_oecd_countries <- oecd_countries %>%
group_by(country) %>%
summarise(mean_inpatient_care_alos = mean(inpatient_care_alos),
mean_curative_care_alos = mean(curative_care_alos)) %>%
mutate(mean_inpatient_care_alos = round(mean_inpatient_care_alos, 1),
mean_curative_care_alos = round(mean_curative_care_alos, 1)) %>%
arrange(country)
# Check and view for missing value either in Impatient ALOS or Curative ALOS
clean_data %>%
tabyl(country, year) %>% # tabulates country on rows and year columns
View()
oecd_countries <- clean_data %>%
filter(!(country %in% c("Greece", "Slovak Republic")))
# Both countries had empty values in 1 or more years
# Cross check if code was successful
oecd_countries %>%
tabyl(country, year) %>%
View()
ggplotly(ggplot(oecd_countries, mapping = aes(x = curative_care_alos,
y = inpatient_care_alos)) +
geom_point(aes(color = country)) + scale_x_log10() + scale_y_log10() +
geom_smooth(method = "glm", se = FALSE) +
labs(title = "Impatient Care ALOS vs Curative Care ALOS",
subtitle = "Trend Between the Curative Care ALOS and Inpatient Care ALOS in the last decade",
x = "Curative Care ALOS", y = "Inpatient Care ALOS",
caption = "Source: https://stats.oecd.org"))
#if(!require(pacman)) install.packages('pacman')
pacman:: p_load(
"rmarkdown", "tinytex", "tidyverse", "remotes",
"knitr", "flexdashboard","prettydoc", "rmdformats",
"kableExtra", "inspectdf", "plotly", "visdat", "here",
"janitor", "flexdashboard", "patchwork")
# Importing and loading Hospital Aggregates Dataset in a directory
Hospital_Aggregates_raw <- read_csv("Data/HU_HA.csv")
# Pivoting from long to wide data
wide_data <- Hospital_Aggregates_raw %>%
pivot_wider(names_from = c(Variable, Measure),
values_from = Value,
id_cols = c(Year, Country)) %>%
clean_names() # clean names to lower and snake case for easy manipulation
allclean_data <- wide_data %>%
select(year, country,
inpatient_care_alos_days = inpatient_care_average_length_of_stay_all_hospitals_days,
curative_care_alos_days = curative_care_average_length_of_stay_days) %>%
filter(!(year %in% c(2021:2022)))
allclean_data %>%
summary_factorlist(dependent = "curative_care_alos_days",
explanatory = "inpatient_care_alos_days",
p = TRUE,
column = TRUE)
#if(!require(pacman)) install.packages('pacman')
pacman:: p_load(
"rmarkdown", "tinytex", "tidyverse", "remotes",
"knitr", "flexdashboard","prettydoc", "rmdformats",
"kableExtra", "inspectdf", "plotly", "visdat", "here",
"janitor", "flexdashboard", "patchwork")
#if(!require(pacman)) install.packages('pacman')
pacman:: p_load(
"rmarkdown", "tinytex", "tidyverse", "remotes",
"knitr", "flexdashboard","prettydoc", "rmdformats",
"kableExtra", "inspectdf", "plotly", "visdat", "here",
"janitor", "flexdashboard", "patchwork", "finalfit")
allclean_data %>%
summary_factorlist(dependent = "curative_care_alos_days",
explanatory = "inpatient_care_alos_days",
p = TRUE,
column = TRUE)
allclean_data %>%
summary_factorlist(dependent = "inpatient_care_alos_days",
explanatory = "curative_care_alos_days",
p = TRUE,
column = TRUE)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
pacman:: p_load(
"rmarkdown", "tinytex", "tidyverse", "knitr",
"prettydoc", "rmdformats", "kableExtra",
"plotly", "visdat", "here", "finalfit",
"janitor", "patchwork")
pacman:: p_load(
"rmarkdown", "tinytex", "tidyverse", "knitr",
"prettydoc", "rmdformats", "kableExtra",
"plotly", "visdat", "here", "finalfit",
"janitor", "patchwork")
# Importing and loading Hospital Aggregates Dataset in a directory
Hospital_Aggregates_raw <- read_csv(here("Data/HU_HA.csv"))
Hospital_Aggregates_raw
data_hg <- Hospital_Aggregates_raw %>%
select(Year, Country, Variable, Measure, Value) %>%
filter(Variable %in% c("Inpatient care average length of stay (all hospitals)",
"Curative care average length of stay")) %>%
clean_names() %>%
filter(!(year %in% c(2021:2022)) & !(country %in% c("Brazil",
"Bulgaria",
"China (People's Republic of)",
"Croatia",
"Romania",
"Russia",
"South Africa"))) %>% # exclude all non-oecd countries
drop_na() %>% #drop all rows with NA values
arrange(year)
data_hg %>%
distinct(measure) # check for distinct observation
data_hg %>%
tabyl(country) %>% # Tabulate the data by country and counts no. of values
filter(n < 22) # 22 values for each year and remove countries less than 22
mean_year <- data_hg %>%
filter(!(country %in% c("Canada",
"Chile",
"Colombia",
"Denmark",
"Greece",
"Mexico",
"Netherlands",
"Slovak Republic"))) %>%
group_by(year, variable, measure) %>%
summarize(mean_value = mean(value)) %>%
mutate(mean_value = round(mean_value, 1)) %>%
ungroup()
gap_years <- seq(from = 2010, to = 2020, by = 1) # gap of 1 year from 2010-2020
mean_year %>%
ggplotly(ggplot(mean_year, mapping = aes(x = year, y = mean_value, color = variable)) +
geom_line(linewidth = 1) + geom_point(color = "black") +
scale_x_continuous(breaks = gap_years) +
geom_text(aes(label = mean_value, vjust = -0.3)) + theme(legend.position = "top") +
theme(legend.title = element_blank()) +
labs(title = "AVERAGE LENGTH OF STAY",
subtitle = "Curative care ALOS vs Impatient care ALOS in the Last Decade",
x = "Year", y = "Average Days",
caption = "source: https://stats.oecd.org
accessed Sunday 7th November, 2023"))
gap_years <- seq(from = 2010, to = 2020, by = 1) # gap of 1 year from 2010-2020
mean_year %>%
y <-  ggplot(mean_year, mapping = aes(x = year, y = mean_value, color = variable)) +
geom_line(linewidth = 1) + geom_point(color = "black") +
scale_x_continuous(breaks = gap_years) +
geom_text(aes(label = mean_value, vjust = -0.3)) + theme(legend.position = "top") +
theme(legend.title = element_blank()) +
labs(title = "AVERAGE LENGTH OF STAY",
subtitle = "Curative care ALOS vs Impatient care ALOS in the Last Decade",
x = "Year", y = "Average Days",
caption = "source: https://stats.oecd.org
accessed Sunday 7th November, 2023")
gap_years <- seq(from = 2010, to = 2020, by = 1) # gap of 1 year from 2010-2020
mean_year %>%
y <-  ggplot(mean_year, mapping = aes(x = year, y = mean_value, color = variable)) +
geom_line(linewidth = 1) + geom_point(color = "black") +
scale_x_continuous(breaks = gap_years) +
geom_text(aes(label = mean_value, vjust = -0.3)) + theme(legend.position = "top") +
theme(legend.title = element_blank()) +
labs(title = "AVERAGE LENGTH OF STAY",
subtitle = "Curative care ALOS vs Impatient care ALOS in the Last Decade",
x = "Year", y = "Average Days",
caption = "source: https://stats.oecd.org
accessed Sunday 7th November, 2023") %>%
ggplotly(y)
gap_years <- seq(from = 2010, to = 2020, by = 1) # gap of 1 year from 2010-2020
mean_year %>%
y <-  ggplot(mean_year, mapping = aes(x = year, y = mean_value, color = variable)) +
geom_line(linewidth = 1) + geom_point(color = "black") +
scale_x_continuous(breaks = gap_years) +
geom_text(aes(label = mean_value, vjust = -0.3)) + theme(legend.position = "top") +
theme(legend.title = element_blank()) +
labs(title = "AVERAGE LENGTH OF STAY",
subtitle = "Curative care ALOS vs Impatient care ALOS in the Last Decade",
x = "Year", y = "Average Days",
caption = "source: https://stats.oecd.org
accessed Sunday 7th November, 2023")
gap_years <- seq(from = 2010, to = 2020, by = 1) # gap of 1 year from 2010-2020
y <-  ggplot(mean_year, mapping = aes(x = year, y = mean_value, color = variable)) +
geom_line(linewidth = 1) + geom_point(color = "black") +
scale_x_continuous(breaks = gap_years) +
geom_text(aes(label = mean_value, vjust = -0.3)) + theme(legend.position = "top") +
theme(legend.title = element_blank()) +
labs(title = "AVERAGE LENGTH OF STAY",
subtitle = "Curative care ALOS vs Impatient care ALOS in the Last Decade",
x = "Year", y = "Average Days",
caption = "source: https://stats.oecd.org
accessed Sunday 7th November, 2023")
ggplotly(y)
gap_years <- seq(from = 2010, to = 2020, by = 1) # gap of 1 year from 2010-2020
ggplotly(ggplot(mean_year, mapping = aes(x = year, y = mean_value, color = variable)) +
geom_line(linewidth = 1) + geom_point(color = "black") +
scale_x_continuous(breaks = gap_years) +
geom_text(aes(label = mean_value, vjust = -0.3)) + theme(legend.position = "top") +
theme(legend.title = element_blank()) +
labs(title = "AVERAGE LENGTH OF STAY",
subtitle = "Curative care ALOS vs Impatient care ALOS in the Last Decade",
x = "Year", y = "Average Days",
caption = "source: https://stats.oecd.org
accessed Sunday 7th November, 2023"))
library(kableExtra)
install.packages("gt")
install.packages("gt")
install.packages("gtable")
